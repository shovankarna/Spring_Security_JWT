server:
  port: 8081

spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: ${SPRING_DATASOURCE_DRIVER-CLASS-NAME}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  data:
    redis:
      host: localhost
      port: 6379
  # sql:
  #   init:
  #     mode: always
  security:
    oauth2:
      client:
        registration:
          # google:
          #   client-id: YOUR_GOOGLE_CLIENT_ID
          #   client-secret: YOUR_GOOGLE_CLIENT_SECRET
          #   scope: profile, email
          #   redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
          #   client-name: Google
          github:
            client-id: YOUR_GITHUB_CLIENT_ID
            client-secret: YOUR_GITHUB_CLIENT_SECRET
            scope: read:user
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-name: GitHub
        provider:
          # google:
          #   authorization-uri: https://accounts.google.com/o/oauth2/auth
          #   token-uri: https://oauth2.googleapis.com/token
          #   user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
          #   user-name-attribute: sub
          github:
            authorization-uri: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user
            user-name-attribute: id
